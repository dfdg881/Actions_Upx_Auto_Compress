name: Download and Compress Alist with UPX
on:
  workflow_dispatch:  # 手动触发

env:
  UPX_ARGS: "--best --lzma"  #  用户自定义UPX参数

jobs:
  compress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get Alist release info
        id: alist_release
        run: |
          RELEASE_INFO=$(curl -sL "https://api.github.com/repos/AlistGo/alist/releases/latest")
          VERSION=$(echo "$RELEASE_INFO" | jq -r '.tag_name | ltrimstr("v")')
          DOWNLOAD_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name == "alist-linux-musl-arm64.tar.gz") | .browser_download_url')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Download and extract Alist
        run: |
          curl -L -o alist.tar.gz "${{ steps.alist_release.outputs.download_url }}"
          tar xzvf alist.tar.gz
          rm alist.tar.gz
          echo "Alist extracted to $(pwd)/alist"

      - name: Validate executable
        run: |
          if [ ! -f ./alist ]; then
            echo "::error::Alist executable not found"
            exit 1
          fi

      - name: Get UPX release info
        id: upx_release
        run: |
          #  通过GitHub API获取最新版本
          RELEASE_JSON=$(curl -sL "https://api.github.com/repos/upx/upx/releases/latest")
          VERSION=$(echo "$RELEASE_JSON" | jq -r '.tag_name | ltrimstr("v")')
          
          #  动态构建资产名称
          ARCH=$(uname -m)
          case "$ARCH" in
            x86_64)  SUFFIX="amd64_linux" ;;
            aarch64) SUFFIX="arm64_linux" ;;
            *)       echo "::error::Unsupported architecture $ARCH"; exit 1 ;;
          esac
          
          ASSET_NAME="upx-$VERSION-$SUFFIX.tar.xz"
          DOWNLOAD_URL=$(echo "$RELEASE_JSON" | jq -r --arg name "$ASSET_NAME" '.assets[] | select(.name == $name).browser_download_url')
          
          if [ -z "$DOWNLOAD_URL" ]; then
            echo "::error::UPX asset not found for $ASSET_NAME"
            exit 1
          fi
          
          echo "asset_name=$ASSET_NAME" >> $GITHUB_OUTPUT
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Install UPX
        run: |
          #  解压并安装二进制
          curl -L -o upx.tar.xz "${{ steps.upx_release.outputs.download_url }}"
          mkdir -p upx-bin
          tar xvf upx.tar.xz -C upx-bin --strip-components=1
          sudo install upx-bin/upx /usr/local/bin/
          rm -rf upx-bin upx.tar.xz
          upx --version

      - name: Compress with UPX
        run: |
          #  使用自定义参数执行压缩
          echo "Original size: $(du -h ./alist)"
          upx ${{ env.UPX_ARGS }} ./alist
          echo "Compressed size: $(du -h ./alist)"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Alist_${{ steps.alist_release.outputs.version }}_upx
          path: ./alist
