name: AdGuardHome Builder

on:
  workflow_dispatch:
    inputs:
      adguard_version:
        description: 'AdGuardHome version to download (e.g., v0.107.0 or latest)'
        required: true
        default: 'latest'
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get latest versions
      id: versions
      run: |
        if [[ "${{ github.event.inputs.adguard_version }}" == "latest" ]]; then
          adguard_version=$(curl -s "https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
        else
          adguard_version=${{ github.event.inputs.adguard_version }}
        fi
        echo "adguard_version=${adguard_version}" >> $GITHUB_OUTPUT

        upx_version=$(curl -s "https://api.github.com/repos/upx/upx/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
        echo "upx_version=${upx_version}" >> $GITHUB_OUTPUT

    - name: Download and extract AdGuardHome
      run: |
        adguard_url="https://github.com/AdguardTeam/AdGuardHome/releases/download/${{ steps.versions.outputs.adguard_version }}/AdGuardHome_${{ matrix.os }}_${{ matrix.arch }}.tar.gz"
        wget -O adguardhome.tar.gz "${adguard_url}"
        tar -zxvf adguardhome.tar.gz
        mv AdGuardHome/AdGuardHome .

    - name: Download and extract UPX
      run: |
        upx_url="https://github.com/upx/upx/releases/download/${{ steps.versions.outputs.upx_version }}/upx-${{ steps.versions.outputs.upx_version | cut -c2- }}-${{ matrix.arch }}_linux.tar.xz"
        if [[ "${{ matrix.os }}" == "windows" ]]; then
          upx_url="https://github.com/upx/upx/releases/download/${{ steps.versions.outputs.upx_version }}/upx-${{ steps.versions.outputs.upx_version | cut -c2- }}-win64.zip"
        fi
        wget -O upx.tar.xz "${upx_url}"
        if [[ "${{ matrix.os }}" == "windows" ]]; then
          unzip upx.tar.xz
          mv upx-*/upx.exe .
        else
          tar -xvf upx.tar.xz
          mv upx-*/upx .
        fi


    - name: Compress AdGuardHome with UPX
      run: |
        chmod +x upx
        ./upx --best AdGuardHome

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: AdGuardHome-${{ matrix.os }}-${{ matrix.arch }}
        path: AdGuardHome

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        mkdir -p .github/workflows/adguardhome
        mv AdGuardHome .github/workflows/adguardhome/AdGuardHome_${{ matrix.os }}_${{ matrix.arch }}
        git add .github/workflows/adguardhome/AdGuardHome_${{ matrix.os }}_${{ matrix.arch }}
        git commit -m "Add compressed AdGuardHome for ${{ matrix.os }}-${{ matrix.arch }}"
        git push