name: UPX Auto Compress

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: '要下载的文件URL'
        required: true
        type: string
      file_name:
        description: '保存的文件名'
        required: false
        default: 'file'
        type: string
      save_path:
        description: '保存路径'
        required: false
        default: './'
        type: string
      upx_args:
        description: 'UPX压缩参数'
        required: false
        default: '--best'
        type: string
      file_type:
        description: '文件类型'
        required: false
        default: 'binary'
        type: choice
        options:
          - binary
          - zip
          - targz
      archive_target:
        description: '压缩包中要处理的文件名(仅适用于zip/targz)'
        required: false
        type: string

jobs:
  compress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup working directory
        run: |
          mkdir -p ${{ inputs.save_path }}
          echo "WORKDIR=$(pwd)" >> $GITHUB_ENV

      - name: Get latest UPX version
        id: upx_info
        run: |
          UPX_INFO=$(curl -sL "https://api.github.com/repos/upx/upx/releases/latest")
          UPX_VERSION=$(echo "$UPX_INFO" | jq -r '.tag_name | ltrimstr("v")')
          UPX_DOWNLOAD_URL=$(echo "$UPX_INFO" | jq -r '.assets[] | select(.name | test(".*amd64_linux.tar.xz$")) | .browser_download_url')
          echo "version=$UPX_VERSION" >> $GITHUB_OUTPUT
          echo "download_url=$UPX_DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Download target file
        run: |
          curl -L -o "${{ inputs.file_name }}" "${{ inputs.file_url }}"
          echo "TARGET_FILE=${{ inputs.file_name }}" >> $GITHUB_ENV

      - name: Setup UPX
        run: |
          curl -L -o upx.tar.xz "${{ steps.upx_info.outputs.download_url }}"
          tar -xJf upx.tar.xz --strip-components=1 "upx-${{ steps.upx_info.outputs.version }}-amd64_linux/upx"
          chmod +x ./upx

      - name: Extract archive if needed
        if: inputs.file_type != 'binary'
        run: |
          if [ "${{ inputs.file_type }}" = "zip" ]; then
            unzip "${{ env.TARGET_FILE }}"
          elif [ "${{ inputs.file_type }}" = "targz" ]; then
            tar xzf "${{ env.TARGET_FILE }}"
          fi

      - name: Compress with UPX
        run: |
          if [ "${{ inputs.file_type }}" = "binary" ]; then
            chmod +x "${{ env.TARGET_FILE }}"
            ./upx ${{ inputs.upx_args }} "${{ env.TARGET_FILE }}"
          else
            chmod +x "${{ inputs.archive_target }}"
            ./upx ${{ inputs.upx_args }} "${{ inputs.archive_target }}"
          fi

      - name: Upload compressed file
        uses: actions/upload-artifact@v4
        with:
          name: compressed-files
          path: |
            ${{ inputs.file_type == 'binary' && env.TARGET_FILE || inputs.archive_target }}