name: Custom File Download and Compress with UPX
on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'url'
        required: true
      file_name:
        description: 'file_name'
        required: false
        default: 'example'
      save_path:
        description: 'save_path'
        required: false
        default: './'
      upx_args:
        description: 'upx_args'
        required: false
        default: '--best'
      Is zip file:
        description: 'zip'
        required: false
        default: 'false'
env:
  UPX_DOWNLOAD_NAME: "upx-${{ github.event.inputs.upx_version || 'latest' }}-amd64_linux.tar.xz"

jobs:
  compress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Environment
        run: |
          mkdir -p ${{ github.event.inputs.save_path }}
          echo "WORKDIR=$(pwd)" >> $GITHUB_ENV
          
      - name: Get UPX latest version
        id: upx_info
        run: |
          UPX_INFO=$(curl -sL "https://api.github.com/repos/upx/upx/releases/latest")
          UPX_VERSION=$(echo "$UPX_INFO" | jq -r '.tag_name | ltrimstr("v")')
          UPX_DOWNLOAD_URL=$(echo "$UPX_INFO" | jq -r '.assets[] | select(.name | test(".*amd64_linux.tar.xz$")) | .browser_download_url')
          
          echo "upx_version=$UPX_VERSION" >> $GITHUB_OUTPUT
          echo "upx_download_url=$UPX_DOWNLOAD_URL" >> $GITHUB_OUTPUT
      
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

     
      - name: Download File
        run: |
          FILENAME="${{ github.event.inputs.file_name || 'fz' }}"
          curl -L -o "${FILENAME}" "${{ github.event.inputs.file_url }}"
          echo "DOWNLOADED_FILE=${FILENAME}" >> $GITHUB_ENV

      - name: Download and setup UPX
        run: |
          set -ex
          curl -L -o upx.tar.xz "${{ steps.upx_info.outputs.upx_download_url }}"
          tar -xJOf upx.tar.xz "upx-${{ steps.upx_info.outputs.upx_version }}-amd64_linux/upx" > ./upx
          chmod +x ./upx
          
      - name: unzipped file
        if: ${{ github.event.inputs.zip }}=='true'
        run: |
          set -ex
          unzip /${{ env.DOWNLOADED_FILE }}

      - name: Compress with UPX
        run: |
          set -ex
          chmod +x ${{ env.DOWNLOADED_FILE }}
          ./upx ${{ github.event.inputs.upx_args }} ./OpenList-linux-musl-arm64

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DOWNLOADED_FILE }} compressed
          path: "${{ github.event.inputs.save_path }}/${{ env.DOWNLOADED_FILE }}"
